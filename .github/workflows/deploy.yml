name: deploy next to ncloud

on:
  push:
    branches: [main]

jobs:
  build:
    name: Next.js 빌드 및 아티팩트 업로드
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Node 설치 및 의존성 설치
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm ci

      - name: Next.js 빌드
        run: npm run build

      - name: 아티팩트 디렉토리 구성
        run: |
          mkdir -p .artifact
          cp -r .next/standalone .artifact/
          cp -r .next/static .artifact/.next/static
          cp -r public .artifact/
          cp package.json .artifact/
          cp server.js .artifact/

      - name: 아티팩트 업로드
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: .artifact

  push_to_registry:
    name: 도커 이미지 빌드 및 NCP 레지스트리에 푸시
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 아티팩트 다운로드
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .artifact

      - name: ENV 파일 생성
        run: echo "${{ secrets.ENV }}" > .artifact/.env

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v3

      - name: NCP 레지스트리 로그인
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_ACCESS_KEY }}

      - name: 빌드 결과 기반 도커 이미지 푸시
        uses: docker/build-push-action@v3
        with:
          context: .artifact
          file: Dockerfile
          push: true
          tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/cnergy-frontend:${{ github.sha }}

  pull_from_registry:
    name: NCP 서버에 이미지 배포
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - name: SSH로 서버 접속 후 이미지 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/cnergy-frontend:${{ github.sha }}

            docker stop cnergy-frontend || true
            docker rm cnergy-frontend || true

            docker run -d \
              --env-file .env \
              -p 3000:3000 \
              --name cnergy-frontend \
              ${{ secrets.NCP_CONTAINER_REGISTRY }}/cnergy-frontend:${{ github.sha }}

            docker image prune -f
