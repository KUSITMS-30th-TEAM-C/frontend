# 도커 컴포즈 -> 여러개의 도커 컨테이너를 듸우기 위해 사용되는 간단한 오케스트레이션 도구
# 참고 : https://github.com/vercel/next.js/blob/canary/examples/with-docker-compose/docker-compose.prod.yml

version: '3' # 도커 컴포즈의 버전

services:
  next-app:
    container_name: next-app
    build:
      context: . # Dockerfile이 있는 현재 디렉토리
      dockerfile: Dockerfile
    restart: always
    ports:
      - '3000:3000' # 호스트 머신의 3000번 포트를 도커 컨테이너 내부의 3000번 포트로 연결
    networks: # docker network create my_network로 네트워크를 미리 만들어줘야 한다.
      - my_network

networks:
  # 네트워크 정의를 통해 여러 컨테이너가 서로 통신할 수 있도록 도와주는 기능
  # 각 컨테이너가 같은 네트워크에 속할 때, 컨테이너 이름을 호스트네임으로 사용하여 쉽게 통신할 수 있도록 도와줌
  # 현재 하나의 Container Registry를 사용하기 때문에 필요
  my_network:
    external: true
# 해당 코드를 작성한 뒤
# docker-compose -f docker-compose.yml up -d
# 를 하여 next-app 서비스를 만든다.
# 즉 docker-compose.yml 파일을 통해서 Next.js 애플리케이션을 컨테이너화 하여
# 자동 재시작 및 네트워크 설정 등을 통해 관리할 수 있는 환경을 제공합니다.
